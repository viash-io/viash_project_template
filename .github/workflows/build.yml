name: Build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event.inputs.version }}
  cancel-in-progress: true

on:
  push:
    branches: [ main ]
  workflow_dispatch: 
    inputs:
      version:
        description: |
          The version of the project to build. Example: `1.0.3`.
          
          If not provided, a development build with a version name
          based on the branch name will be built. Otherwise, a release
          build with the provided version will be built.
        required: false

jobs:
  # phase 1
  target:
    name: Build target branch
    runs-on: ubuntu-latest
    permissions:
      contents: write

    outputs:
      target_branch: ${{ steps.build-target.outputs.target_branch }}
      version: ${{ steps.build-target.outputs.version }}
      docker_matrix: ${{ steps.build-target.outputs.docker_matrix }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Install Viash
        uses: viash-io/viash-actions/setup@v6
      
      - name: Determine variables
        id: variables
        run: |
          VERSION="${{ github.event.inputs.version }}"
          SOURCE_BRANCH=$(echo "$GITHUB_REF" | sed 's/refs\/heads\///')

          if [[ -z $VERSION ]]; then
            TARGET_BRANCH="build/$SOURCE_BRANCH"
            VERSION=$(echo "$TARGET_BRANCH" | sed 's/[^a-zA-Z0-9_]/_/g')
          else
            if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+.*$ ]]; then
              echo "Version '$VERSION' does not match PEP440"
              exit 1
            fi
            TARGET_BRANCH="release/${VERSION%.*}.x"
          fi

          echo "Set version of Viash package to '$VERSION'"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          echo "Set target branch to '$TARGET_BRANCH'"
          echo "target_branch=$TARGET_BRANCH" >> $GITHUB_OUTPUT
          

      - uses: viash-io/viash-actions/project/build-target@v6
        id: build-target
        with:
          target_branch: ${{ steps.variables.outputs.target_branch }}
          version: ${{ steps.variables.outputs.version }}
      
      - name: Deploy to target branch
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: ${{ steps.variables.outputs.target_branch }}
          publish_dir: .

  # phase 2
  docker:
    name: Build
    needs: target

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        component: ${{ fromJson(needs.target.outputs.docker_matrix) }}

    steps:
      # Remove unnecessary files to free up space. Otherwise, we get 'no space left on device.'
      - uses: data-intuitive/reclaim-the-bytes@v2
      
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          ref: ${{ needs.target.outputs.target_branch }}

      - uses: viash-io/viash-actions/setup@v6
          
      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: |
          ${{matrix.component.executable}} ---engine docker ---setup build ---verbose
  
      - name: Push image
        run: |
          ${{matrix.component.executable}} ---engine docker ---setup push ---verbose
